webpackJsonp([89450997894629],{"./node_modules/json-loader/index.js!./.cache/json/test.json":function(t,n){t.exports={data:{markdownRemark:{html:'<h1>Button</h1>\n<p>Buttons make common actions immediately visible and easy to perform with one\nclick or tap. They can be used for any type of action, including navigation.</p>\n<hr>\n<h2>Purpose</h2>\n<p>Think about the merchant problem this component solves when you’re using it:</p>\n<h3>Problem</h3>\n<p>An action needs to be completed by a merchant.</p>\n<h3>Solution</h3>\n<p>The button component can be used to help merchants find and complete actions across Shopify.</p>\n<hr>\n<h2>Best practices</h2>\n<p>Buttons should:</p>\n<ul>\n<li>Be clearly and accurately labeled.</li>\n<li>Lead with strong, actionable verbs.</li>\n<li>Use established button colors appropriately. For example, only use a red\nbutton for an action that’s difficult or impossible to undo.</li>\n<li>Prioritize the most important actions. Too many calls to action can cause\nconfusion and make merchants unsure of what to do next.</li>\n<li>Be positioned in consistent locations in the interface.</li>\n</ul>\n<hr>\n<h2>Content guidelines</h2>\n<p>Buttons should be clear and predictable—merchants should be able to anticipate what will happen when they click a button. Never deceive a merchant by mislabeling a button.</p>\n<!-- usagelist -->\n<h4>Do</h4>\n<ul>\n<li>Create order</li>\n<li>Buy shipping label</li>\n</ul>\n<h4>Don’t</h4>\n<ul>\n<li>New order</li>\n<li>\n<p>Buy</p>\n<!-- end -->\n</li>\n</ul>\n<p>Buttons should always lead with a strong verb that encourages\naction. To provide enough context to merchants use the {verb}+{noun} format on\nbuttons except in the case of common actions like Save, Close, Cancel, or OK.</p>\n<!-- usagelist -->\n<h4>Do</h4>\n<ul>\n<li>Activate Apple Pay</li>\n<li>View shipping settings</li>\n</ul>\n<h4>Don’t</h4>\n<ul>\n<li>Try Apple Pay</li>\n<li>\n<p>View your settings</p>\n<!-- end -->\n</li>\n</ul>\n<p>Buttons should be scannable—avoid unnecessary words and articles such as the, an, or a.</p>\n<!-- usagelist -->\n<h4>Do</h4>\n<p>Add menu item</p>\n<h4>Don’t</h4>\n<p>Add a menu item</p>\n<!-- end -->\n<table>\n<thead>\n<tr>\n<th>Prop</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>string</td>\n<td>The content to display inside the button</td>\n</tr>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>A destination to link to, rendered in the href attribute of a link</td>\n</tr>\n<tr>\n<td>primary</td>\n<td>boolean</td>\n<td>Provides extra visual weight and identifies the primary action in a set of buttons</td>\n</tr>\n<tr>\n<td>destructive</td>\n<td>boolean</td>\n<td>Indicates a dangerous or potentially negative action</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>boolean</td>\n<td>Disables the button, disallowing merchant interactiion</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>boolean</td>\n<td>Replaces button text with a spinner while a background action is being performed</td>\n</tr>\n<tr>\n<td>size</td>\n<td>enum\n[\n\'slim\', \'large\'\n]</td>\n<td>Changes the size of the button, giving it more or less padding</td>\n</tr>\n<tr>\n<td>outline</td>\n<td>boolean</td>\n<td>Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops</td>\n</tr>\n<tr>\n<td>fullWidth</td>\n<td>boolean</td>\n<td>Allows the button to grow to the width of its container</td>\n</tr>\n<tr>\n<td>disclosure</td>\n<td>boolean</td>\n<td>Displays the button with a disclosure icon</td>\n</tr>\n<tr>\n<td>submit</td>\n<td>boolean</td>\n<td>Allows the button to submit a form</td>\n</tr>\n<tr>\n<td>plain</td>\n<td>boolean</td>\n<td>Renders a button that looks like a link</td>\n</tr>\n<tr>\n<td>external</td>\n<td>boolean</td>\n<td>Forces url to open in a new tab</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>SVG</td>\n<td>Icon to display to the left of the button content</td>\n</tr>\n<tr>\n<td>accessibilityLabel</td>\n<td>string</td>\n<td>Visually hidden text for screen readers</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td>function()</td>\n<td>Callback when clicked</td>\n</tr>\n<tr>\n<td>onFocus</td>\n<td>function()</td>\n<td>Callback when button becomes focussed</td>\n</tr>\n<tr>\n<td>onBlur</td>\n<td>function()</td>\n<td>Callback when focus leaves button</td>\n</tr>\n</tbody>\n</table>\n<h2>Examples</h2>\n<h3>Basic button</h3>\n<p>Used most in the interface. Only use another style if a button requires more or less visual weight.</p>\n<pre><code class="language-jsx">&#x3C;Button>Add product&#x3C;/Button>\n</code></pre>\n<h3>Outline button</h3>\n<p>Use against shaded or colorful backgrounds. An outline button will maintain the appropriate visual weight and won’t clash with the background color.</p>\n<pre><code class="language-jsx">&#x3C;Button outline>Add product&#x3C;/Button>\n</code></pre>\n<h3>Plain button</h3>\n<p>Use for less important or less commonly used actions since they’re less prominent. For example, plain buttons are used as secondary actions in card headers.</p>\n<pre><code class="language-jsx">&#x3C;Button plain>View shipping settings&#x3C;/Button>\n</code></pre>\n<h3>Primary buttons</h3>\n<p>Use to highlight the most important actions in any experience. Don’t use more than one primary button in a section or screen to avoid overwhelming merchants.</p>\n<pre><code class="language-jsx">&#x3C;Button primary>Save theme&#x3C;/Button>\n</code></pre>\n<h3>Destructive buttons</h3>\n<p>Use when the action will delete merchant data or be otherwise difficult to recover from. Destructive buttons should trigger a confirmation dialog before the action is completed. Be thoughtful about using destructive buttons because they can feel stressful for merchants.</p>\n<pre><code class="language-jsx">&#x3C;Button destructive>Delete theme&#x3C;/Button>\n</code></pre>\n<h3>Slim buttons</h3>\n<p>Use when a table or list has a set of actions on each item to avoid making items taller than they need to be. Don’t use slim buttons for primary actions.</p>\n<pre><code class="language-jsx">&#x3C;Button size="slim">Save variant&#x3C;/Button>\n</code></pre>\n<h3>Large buttons</h3>\n<p>Use for the main call to action in empty states or for calls to action shown with large illustrations.</p>\n<pre><code class="language-jsx">&#x3C;Button size="large">Create store&#x3C;/Button>\n</code></pre>\n<h3>Full-width buttons</h3>\n<p>Use for buttons placed in a narrow column (especially when stacking multiple buttons) or for creating a set of buttons of equal width. Full-width buttons should rarely exceed 320 px wide.</p>\n<pre><code class="language-jsx">&#x3C;Button fullWidth>Add customer&#x3C;/Button>\n</code></pre>\n<h3>Disabled state</h3>\n<p>Use for actions that aren’t currently available. The surrounding interface should make it clear why the button is disabled and what needs to be done to enable it.</p>\n<pre><code class="language-jsx">&#x3C;Button disabled>Buy shipping label&#x3C;/Button>\n</code></pre>\n<h3>Loading state</h3>\n<p>Use when a button has been pressed and the associated action is in progress.</p>\n<pre><code class="language-jsx">&#x3C;Button loading>Save product&#x3C;/Button>\n</code></pre>\n<hr>\n<h2>Related components</h2>\n<ul>\n<li>To learn how to combine or lay out multiple buttons, <a href="/components/actions/button-group">use the button group component</a></li>\n<li>To embed an action into a line of text, <a href="/components/navigation/link">use the link component</a></li>\n</ul>',frontmatter:{title:""}}},pathContext:{slug:"/test/"}}}});
//# sourceMappingURL=path---test-77ea4679b2f395fc3ff6.js.map